apply plugin: 'com.android.application'
apply from: "$rootDir/config.gradle"
apply plugin: 'com.sensorsdata.analytics.android'

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "org.nervos.neuron"
        minSdkVersion 20
        targetSdkVersion 27
        versionCode appConfig.versionCode
        versionName getVersionName(appConfig.isDebug)
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        manifestPlaceholders = [InstallChannelValue: "cryptape"]

    }

    signingConfigs {
        release {
            storeFile file('../keystore.jks')
            storePassword appConfig.signStorePassword
            keyAlias appConfig.signKeyAlias
            keyPassword appConfig.signKeyPassword
        }
        debug {
            storeFile file('../keystore.jks')
            storePassword appConfig.signStorePassword
            keyAlias appConfig.signKeyAlias
            keyPassword appConfig.signKeyPassword
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "boolean", "IS_DEBUG", "true"
        }

        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "boolean", "IS_DEBUG", "false"

        }
    }

    applicationVariants.all { variant ->
            variant.outputs.all { output ->
                def lintTask = tasks["lint${variant.name.capitalize()}"]
                output.assemble.dependsOn lintTask

                if (variant.buildType.name == 'release') {
                    def apkName = "neuron_v${getVersionName(false)}_${variant.productFlavors[0].name}.apk"
                    outputFileName = new File(apkName)
                } else {
                    def apkName = "neuron_v${getVersionName(true)}.apk"
                    outputFileName = new File(apkName)
                }
            }
    }

    android {
        lintOptions {
            abortOnError false
            lintConfig file('lint.xml')
            // Turns off checks for the issue IDs you specify.
            disable 'TypographyFractions','TypographyQuotes'
            // Turns on checks for the issue IDs you specify. These checks are in
            // addition to the default lint checks.
            enable 'RtlHardcoded','RtlCompat', 'RtlEnabled'
            // To enable checks for only a subset of issue IDs and ignore all others,
            // list the issue IDs with the 'check' property instead. This property overrides
            // any issue IDs you enable or disable using the properties above.
            check 'NewApi', 'InlinedApi'
            // If set to true, turns off analysis progress reporting by lint.
            quiet true
            // if set to true (default), stops the build if errors are found.
            abortOnError false
            // if true, only report errors.
            ignoreWarnings true
        }
    }


    // 渠道配置

    flavorDimensions "default"
    productFlavors {
        yingyongbao {dimension "default"}
        _360 {dimension "default"}
        oppo {dimension "default"}
        baidu {dimension "default"}
        huawei {dimension "default"}
        xiaomi {dimension "default"}
        vivo {dimension "default"}
        wandoujia {dimension "default"}
        others  {dimension "default"}
    }

    productFlavors.all { flavor ->
        flavor.manifestPlaceholders = [InstallChannelValue: name] // 动态地修改AndroidManifest中的渠道名
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildToolsVersion '28.0.3'
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.android.support:design:27.1.1'
    implementation 'io.reactivex:rxandroid:1.2.0'
    implementation 'org.slf4j:slf4j-api:1.7.25'
    implementation 'com.squareup.okhttp3:okhttp:3.10.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.10.0'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.9.0'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.9.0'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.9.0'
    implementation 'org.bouncycastle:bcprov-jdk15on:1.56'
    implementation 'org.abstractj.kalium:kalium:0.7.0'
    implementation 'com.google.protobuf:protobuf-java:3.5.1'
    implementation 'cn.yipianfengye.android:zxing-library:2.2'
    implementation 'com.snappydb:snappydb-lib:0.5.2'
    implementation 'com.esotericsoftware.kryo:kryo:2.24.0'
    implementation 'com.google.guava:guava:24.1-android'
    implementation 'com.ogaclejapan.smarttablayout:library:1.6.1@aar'
    implementation 'com.madgag.spongycastle:core:1.58.0.0'
    implementation 'com.snappydb:snappydb-lib:0.5.2'
    implementation 'com.esotericsoftware.kryo:kryo:2.24.0'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'com.alibaba:fastjson:1.1.70.android'
    implementation 'de.hdodenhof:circleimageview:2.2.0'
    implementation 'com.hyman:flowlayout-lib:1.1.2'
    implementation 'org.jsoup:jsoup:1.11.3'
    implementation 'org.greenrobot:eventbus:3.1.1'
    implementation 'org.web3j:core:3.3.1-android'
    implementation 'com.yanzhenjie:permission:2.0.0-rc5'
    implementation 'io.reactivex:rxjava:1.2.4'
    implementation 'com.github.bumptech.glide:glide:4.8.0'
    implementation 'com.sensorsdata.analytics.android:SensorsAnalyticsSDK:2.0.3'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.8.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation files('libs/abi-0.18-android.jar')
    implementation files('libs/crypto-0.18-android.jar')
    implementation files('libs/protobuf-0.18-android.jar')
    implementation files('libs/utils-0.18-android.jar')
    implementation files('libs/infura-3.3.1-android.jar')
    implementation files('libs/core-0.19-android.jar')
}

def getVersionName(boolean isDebug) {
    String version = appConfig.versionMajor +
            '.' + appConfig.versionMinor +
            '.' + appConfig.versionBeta
    String today = new Date().format('yyMMdd')
    String time = new Date().format('HHmmss')
    if (isDebug) {
        return version + ".$today.$time"
    }
    return version + ".$today"
}
